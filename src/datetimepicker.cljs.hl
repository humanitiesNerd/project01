(ns project0.datetimepicker
  (:require ;[cljs-time.core :as time]
            ;[cljs-time.format :as f]
            [project0.components.tabs :as tabs]
            [project0.components.dimmer :refer [dimmer]]
            [project0.components.days-slider :refer [days-slider]]
            )
  
  )
  
(defn datepicker [dimmer-state selected-daytime formatted-moment]
    (let [selected-tab (cell :partenza)]
      (dimmer :dimmer-state dimmer-state
      ((tabs/tabs ) :class "inverted"

       ((tabs/tab-trigger
         :state (cell= (= selected-tab :partenza)))
        :click (fn [ev] (swap! selected-tab (fn [_] :partenza)))
        "Partenza" )

       ((tabs/tab-trigger
         :state (cell= (= selected-tab :arrivo)))
        :click (fn [ev] (swap! selected-tab (fn [_] :arrivo)))
        "Arrivo")
       )
      (tabs/tab-content :class "inverted"
                   (p "Time slider")

                   (select :class "inverted ui dropdown"
                           (option :value "" "Gender")
                           (option :value "1" "Male")
                           (option :value "0" "Female")
                           )
                   
                   (days-slider
                    :selected-daytime selected-daytime
                    :formatted-moment formatted-moment))
                   )))
