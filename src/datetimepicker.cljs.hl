(ns project0.datetimepicker
  ;(:require [cljs-time.core :as time])
  )


(defelem tabs [attr kids]
  ((div :class "ui top attached tabular menu") attr kids)
  )

;"ui bottom attached active tab inverted segment"

(defelem tab [{:keys [state] :as attr} kids]
  ((div :class "item"
        ) :class (cell= {:active state})
   (dissoc attr :state) kids)
  )

(defn datepicker [dimmer-state]
  (let [selected-tab (cell :partenza)
        dimmer-classes (cell=  {:visible dimmer-state
                                :active dimmer-state
                                :hidden (not dimmer-state)}
                               )
        dimmer-styles (cell= (if dimmer-state
                               {:height "300px"}
                               {:height nil}))
        ]
    ((div :class "ui dimmer modals page transition")
     :class dimmer-classes ;:css dimmer-styles
     ((div :class "ui basic modal scrolling transition")
      :class dimmer-classes ;:css dimmer-styles

      ((tabs ) :class "inverted"

       ((tab
         :state (cell= (= selected-tab :partenza)))
        :click (fn [ev] (swap! selected-tab (fn [_] :partenza)))
        "Partenza" )

       ((tab
         :state (cell= (= selected-tab :arrivo)))
        :click (fn [ev] (swap! selected-tab (fn [_] :arrivo)))
        "Arrivo")
       )
      
      (div :class "ui bottom attached active tab inverted segment"
           (p "Time slider")
           
           )
      ))
    ))








(defn my-form [dimmer-state]
  (form :class "ui large form"
        :method "POST"  
        :action "#/results"
        
        (div :class "field"
             (label "Da")
             (input
              :name "da"
              :placeholder "Da"
              :type "text"))
        (div :class "field"
             (label "A")
             (input
              :name "a"
              :placeholder "A"
              :type "text"))
        (div :class "field"
             (label "Data")
             (input
              :name "data"
              :placeholder "data"
              :type "text"))
        (div :class "field"
             (label "Ora")
             (input
              :click
              (fn [ev]
                ;(.modal (js/$ ".ui.basic.modal") "show")
                (swap! dimmer-state not)
                )
              :name "ora"
              :placeholder "ora"
              :type "text")) 
        (button
         :class "large ui button right floated"
         :type "submit"
         (str "Submit")))
  )
